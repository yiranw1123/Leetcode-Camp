分发饼干 

胃口和饼干排序，小饼干先满足小胃口 or 先喂饱大胃口（倒序）

public int findContentChildren(int[] g, int[] s) {
        Arrays.sort(g);
        Arrays.sort(s);
        int start = 0;
        int count = 0;

        for(int i = 0;i<s.length && start < g.length;i++){
            if(s[i] >= g[start]){
                start++;
                count++;
            }
        }
        return count;
    }

坡度摆动

    public int wiggleMaxLength(int[] nums) {
        if(nums.length <= 1) return nums.length;
        int curDiff = 0;
        int preDiff = 0;
        int count = 1;

        for(int i = 1;i<nums.length;i++){
            curDiff = nums[i] -  nums[i-1];
            if((curDiff >0 && preDiff <=0) || (curDiff < 0 && preDiff >=0)){
                count++;
                //只在坡度变化的时候更改prediff
                preDiff = curDiff;
            }
        }
        return count;
    }


最大子数组和


    public int maxSubArray(int[] nums) {
        int res = nums[0];
        int pre = nums[0];

        for(int i = 1;i<nums.length;i++){
            pre = Math.max(pre + nums[i], nums[i]);
            res = Math.max(res, pre);
        }

        return res;

    }
